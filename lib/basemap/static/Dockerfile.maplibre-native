# specify which branch or commit sha to build
ARG MLN_COMMIT=de1bcd1665800a3ff663a76e2f98c569407c0937
ARG DEBIAN_VERSION
FROM debian:${DEBIAN_VERSION} AS runner-base

# keep runtime dependencies in sync with Dockerfile.release
RUN apt-get -y update \
  && apt-get -y install --no-install-recommends \
  libcurl4 \
  libglx0 \
  libicu[0-9]+$ \
  libjpeg62-turbo \
  libopengl0 \
  libpng16-16 \
  libuv1 \
  libwebp[0-9]+$ \
  xauth \
  xvfb \
  && rm -rf /var/lib/apt/lists/*

FROM runner-base as cloner
RUN apt-get -y update \
  && apt-get -y install --no-install-recommends \
  ca-certificates \
  git \
  && rm -rf /var/lib/apt/lists/*
ENV MLN_COMMIT=$MLN_COMMIT
RUN git clone --recurse-submodules -j8 https://github.com/maplibre/maplibre-native.git /build \
  && cd /build \
  && git reset --hard ${MLN_COMMIT}

FROM runner-base as builder
RUN apt-get -y update \
  && apt-get -y install --no-install-recommends \
  ccache \
  cmake \
  g++ \
  libc++-dev \
  libc++abi-dev \
  libcurl4-openssl-dev \
  libgl1-mesa-dev \
  libgl1-mesa-dri \
  libglfw3-dev \
  libicu-dev \
  libjpeg62-turbo-dev \
  libpng-dev \
  libuv1-dev \
  libwebp-dev \
  ninja-build \
  pkg-config \
  && rm -rf /var/lib/apt/lists/*
COPY --from=cloner /build/ /build/
WORKDIR /build/
RUN cmake . -B build -G Ninja -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
  && cmake --build build -j $(nproc 2>/dev/null)

# ensure our patch files are considered newer than the previous build
COPY ./patch/. /patch/
RUN touch /patch/**/* \
  && cp -r /patch/. /build/ \
  && cmake --build build -j $(nproc 2>/dev/null)

FROM runner-base as runner
WORKDIR /build
COPY --from=builder /build/build/bin/mbgl-render /build/mbgl-render

# Copy finicky libraries that are not easily installed in other hosts. We need
# to do this because we base the devel or release image might drift from when we
# last built this one.
# Run the executable like so:
# LD_PRELOAD=$(ls *.so* | sed 's,lib,./lib,' | sed -z 's,\n, ,g')
# echo '9.9711715 53.585086000000004 10.0 1 500 500 route-highlight route_id 11' | \
#   xvfb-run -a \
#   ./mbgl-render \
#     --style priv/static/assets/basemap/styles/standard.json.local \
#     --assets priv/static/ \
#     --max-zoom 14
RUN cp \
  /usr/lib/x86_64-linux-gnu/libpng16.so.16 \
  .

RUN /build/mbgl-render --help
