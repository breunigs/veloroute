$minWidth: 330px;
$mainWidth: 66.6666vw;
$sidebarWidth: 33.3333vw;
$bgcolor: #f8f8f8;
$darkBg: #333;
$red: #e30513;
// via https://codepen.io/sosuke/pen/Pjoqqp
$redColorFilter: brightness(0) saturate(100%) invert(17%) sepia(99%) saturate(6592%) hue-rotate(352deg) brightness(87%) contrast(105%);
$darkBgHighlight: #666;
$contentPad: 0.9rem;

* {
  margin: 0;
  padding: 0;
  text-decoration: none;
  touch-action: manipulation;
}

html,
body>div {
  overflow: hidden;
  overscroll-behavior: none;
}

body {
  height: 100vh;
  height: -webkit-fill-available;
  background: #333;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
  font-size: 0.9em;
}


#map,
#videoOuter {
  width: $mainWidth;
  min-width: $minWidth;
  height: 50%;
  display: block;
  left: 0;
  position: fixed;
  contain: strict;
}

#map {
  top: 0;
  z-index: 1;
  overflow: hidden;
  background-color: #EFE9E1;

  &.preview .maplibregl-canvas-container {
    visibility: hidden;
  }

  &.preview {
    cursor: wait;
    background-repeat: no-repeat;
    background-position: center;
  }
}

#videoOuter {
  top: 50%;
  overflow: hidden;
  background: #333 url('/images/video_poster.svg') 50% 50% / contain no-repeat;
}

body.fullscreen #videoOuter {
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  height: -webkit-fill-available;
  position: fixed;
  z-index: 11;
}

#videoOuter:hover, #videoOuter[data-state="play"] {
  #videoControls, #videoRoute, #videoRecordingDate {
    opacity: 1;
  }
}

body.fullscreen #videoOuter, #videoOuter:fullscreen {
  &.inactivity {
    cursor: none;

    #videoControls, #videoRoute, #videoRecordingDate {
      opacity: 0 !important;
      cursor: auto;
    }
  }
}


#videoRoute, #videoControls, #videoRecordingDate {
  // opacity: 1 !important; // toggle

  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  z-index: 12;
}

$videoInfoOverlayPadding: 0.5rem;
#videoRoute, #videoRecordingDate {
  top: 0;
  position: absolute;
  display: block;
  padding: $videoInfoOverlayPadding;
  // padding-top: 0.7rem;
  color: #fff;
  max-width: 90%;
  overflow-x: hidden;
  white-space: nowrap;
  box-sizing: border-box;
  text-overflow: ellipsis;
  text-decoration: none;
  background: rgba(0, 0, 0, 0.6);

  span {
    margin-right: 0.2rem;
    font-weight: bold;
  }
}

#videoRoute {
  left: 0;
  border-bottom-right-radius: $videoInfoOverlayPadding;
  font-weight: bold;
  padding-left: $videoInfoOverlayPadding;
  padding-left: max($videoInfoOverlayPadding, env(safe-area-inset-left));
}

#videoRecordingDate {
  right: 0;
  border-bottom-left-radius: $videoInfoOverlayPadding;
  display: none;
}

$videoBarHeight: 2.6rem;
$videoBarBtnMargin: 0.3rem;
$videoBarProgressHeight: 0.4rem;
#videoControls {
  height: $videoBarHeight;
  left: 0;
  bottom: 0;
  position: absolute;
  width: 100%;

  background: rgba(0, 0, 0, 0.6);
  display: flex;

  padding-bottom: 0;
  padding-bottom: env(safe-area-inset-bottom);

  button {
    border: 0;

    height: $videoBarHeight - 2*$videoBarBtnMargin;
    width: $videoBarHeight - 2*$videoBarBtnMargin;
    margin: $videoBarBtnMargin;
    overflow: hidden;
    float: left;
    color: #fff;
    background: transparent;
    font-weight: bold;
    font-size: 1.2rem;
    line-height: $videoBarHeight - 2*$videoBarBtnMargin;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    position: relative;

    &.disabled {
      cursor: default;

      &::before {
        position: absolute;
        content: "";
        left: $videoBarBtnMargin;
        top: 50%;
        right: 0;
        border-top: 2px solid;
        border-color: $red;
        width: 1.5rem;
        transform:rotate(-45deg);
      }
    }

    &:not(.disabled):hover, &:not(.disabled):hover {
      @media (hover: hover) {
        color: $red;
        filter: $redColorFilter;
      }
    }
  }

  #playpause {
    background: url("/images/play.svg") no-repeat center center;
    background-size: calc($videoBarHeight / 3);
  }

  #fullscreen {
    background: url("/images/fullscreen.svg") no-repeat center center;
    background-size: calc($videoBarHeight / 2.7);
  }

  #reverse {
    background: url("/images/reverse.svg") no-repeat center center;
    background-size: calc($videoBarHeight / 2.7);
  }

  #skipBackward5 {
    background: url("/images/skip_backward_5.svg") no-repeat center center;
    background-size: calc($videoBarHeight / 2.2);
  }

  #skipForward5 {
    background: url("/images/skip_forward_5.svg") no-repeat center center;
    background-size: calc($videoBarHeight / 2.2);
  }

  #duration {
    height: $videoBarHeight - 2*$videoBarBtnMargin;
    line-height: $videoBarHeight - 2*$videoBarBtnMargin;
    text-align: center;
    color: #888;
    margin: $videoBarBtnMargin 0;
    min-width: 5.5em;

    #current {
      color: #fff;
    }
  }

  #progressWrapper {
    display: block;
    float: left;
    flex: 2;
    height: $videoBarHeight - 4*$videoBarBtnMargin;
    margin: 2*$videoBarBtnMargin $videoBarBtnMargin;
    cursor: pointer;
  }

  progress {
    width: 100%;
    height: $videoBarProgressHeight;
    border: none;
    margin: calc(($videoBarHeight - 4*$videoBarBtnMargin - $videoBarProgressHeight)/2) 0;
    color: $red;
    border-radius: $videoBarProgressHeight;
    background: #000;
    background: linear-gradient(90deg, #444 var(--loaded, 0%), #000 var(--loaded, 0%));
    user-select: none;

    &::-webkit-progress-bar {
      background: linear-gradient(90deg, #444 var(--loaded, 0%), #000 var(--loaded, 0%));
      border-radius: $videoBarProgressHeight;
    }

    &::-moz-progress-bar {
      border-radius: $videoBarProgressHeight;
      background-color: $red;
    }
    &::-webkit-progress-value {
      border-radius: $videoBarProgressHeight;
      background-color: $red;
    }
  }
}

@media (min-width: calc(2*$minWidth)) {
  #skipBackward5, #skipForward5 {
    display: block !important;
  }

  #layerSwitcher {
    display: block !important;
  }
}

#videoOuter[data-state="pause"] #playpause {
  background: url("/images/pause.svg") no-repeat center center;
  background-size: calc($videoBarHeight / 4);
}

#layerSwitcher, #videoOptions {
  > div {
    // comment in to make it visible without hover
    // visibility: visible !important; // toggle
    // opacity: 1 !important; // toggle

    opacity: 0;
    visibility: collapse;

    transition: opacity 0.2s ease-in-out, visibility 0.2s;
    transition-delay: 250ms;
  }

  &:not(.hidden):hover > div {
    visibility: visible;

    opacity: 1;
    transition-delay: 0ms;
    pointer-events: inherit;
  }
}

#videoOptions {
  button {
    background: url("/images/gear.svg") no-repeat center center;
    background-size: calc($videoBarHeight / 2.7);
  }

  #videoQuality {
    display: none;
  }

  > div {
    position: absolute;
    bottom: $videoBarHeight;
    bottom: calc($videoBarHeight + env(safe-area-inset-bottom));
    right: 0;
    background: rgba(0, 0, 0, 0.6);
    z-index: 1;

    color: #fff;

    padding: 2*$videoBarBtnMargin;
    padding-bottom: 0;

    border-top-left-radius: 0.5rem;

    .column {
      display: block;
      float: left;
    }

    .column:first-child {
      margin-right: 2rem;
    }
  }

  strong, a {
    display: block;
    height: 4*$videoBarBtnMargin;
    overflow-y: hidden;
  }

  $iconWidth: 1rem;
  $iconPadding: 0.3rem;
  strong {
    padding-left: $iconWidth + $iconPadding;
  }

  a {
    margin: 2*$videoBarBtnMargin 0;
    text-decoration: none;

    color: #fff;

    &:hover {
      @media (hover: hover) {
        color: $red;
      }
      text-decoration: none;
    }

    &::before {
      display: inline-block;
      width: $iconWidth;
      padding-right: $iconPadding;
      text-align: right;
      content: "X";
      color: transparent;
      line-height: 1.0rem;
      background-repeat: no-repeat;
      background-position: center center;
      background-size: 0.8rem;
    }

    &:hover::before {
      @media (hover: hover) {
        filter: $redColorFilter;
      }
    }

    &.next::before {
      background-image: url("/images/hourglass.svg");
      background-size: 0.6rem;
    }

    &.active::before {
      background-image: url("/images/checkmark.svg");
    }

    &.active.eye::before {
      background-image: url("/images/eye.svg");
      background-size: 0.8rem;
    }

    small {
      float: right;
      margin: 0.15rem 0;
      font-size: 0.75rem;
    }
  }
}

// highlight the gear icon while the menu is open
// the :not(.hidden) is needed to unhighlight on forced-close
#videoOptions:not(.hidden) {
  button:hover {
    filter: $redColorFilter;
  }
}

// if forced-close, remove the popup immediately
#videoOptions.hidden {
  > div {
    transition-delay: 0ms;
  }
}

.noMobile {
  display: none;
}


$sidebarBoxShadowNormal: 0.1em 0 0.3em 0.1em rgba(0,0,0,0.3);
#sidebar {
  width: $sidebarWidth;
  min-width: $minWidth;
  height: 100vh;
  height: 100dvh;
  position: relative;
  top: 0;
  left: max($minWidth, $mainWidth);
  background: $bgcolor;
  display: flex;
  flex-flow: column;
  z-index: 3;
  box-shadow: $sidebarBoxShadowNormal;
  contain: size layout style;
}

@media (min-width: calc(3*$minWidth)) {
  .noMobile {
    display: inline;
  }

  .showSidebar #sidebar {
    box-shadow: $sidebarBoxShadowNormal !important;
  }

  #sidebar {
    position: fixed;
    transition: none !important;
  }

  #content {
    pointer-events: auto !important;
  }

  #switcher, body::before {
    display: none !important;
  }

  #videoRecordingDate {
    display: block;
  }
}

// keep in sync with mobilegui.ts
$sidebarAnimationDuration: 0.3s;

body::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  box-shadow: inset -3em 0 2em -2em rgba(0,0,0,0.7);
  pointer-events: none;
  z-index: 4;
  transition: all $sidebarAnimationDuration ease;
  opacity: 1;
}

body.showSidebar::before {
  opacity: 0;
}

.showSidebar #sidebar {
  // i.e. move the sidebar to the left by the difference of "expanded" minus "collapsed" state
  transform: translateX(calc(min(100vw - $minWidth, $mainWidth) - max($minWidth, $mainWidth)));
  box-shadow: 2em 0 2em 2em rgba(0,0,0,0.7);
}

.animateSidebar #sidebar {
  transition: transform $sidebarAnimationDuration ease;
}

#content {
  padding: $contentPad;
  padding-top: 0;
  min-width: $minWidth;
  box-sizing: border-box;
  width: 100%;
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;

  -webkit-hyphens: auto;
  hyphens: auto;
  overscroll-behavior: contain;

  contain: strict;

  p, ul, ol {
    line-height: 1.15rem;
  }
}

.hideSidebar #content {
  pointer-events: none;
}

@keyframes spinner {
  0% {
    transform: rotate(-180deg);
  }
  100% {
    transform: rotate(180deg);
  }
}

$cyclistSize: 8rem;
#videoPoster {
  width: 100%;
  height: 100%;

  &::after, &::before {
    transition-property: opacity;
    transition-duration: 0.5s;
    transition-timing-function: ease-in;
    opacity: 0;
    content: "";
    position: absolute;
  }

  &::before {
    background: url('/images/cyclist_outline.svg') 100% 100% / contain no-repeat;
    height: $cyclistSize;
    top:  calc(50% - $cyclistSize/2);
    left: calc(50% - $cyclistSize/2);
    width: $cyclistSize;
  }

  &::after {
    will-change: transform;
    animation: 2.0s ease-in-out infinite spinner;
    animation-play-state: paused;
    border: solid calc($cyclistSize/20) transparent;
    border-bottom-color: $red;
    border-radius: 50%;
    height: calc($cyclistSize/3.55);
    top: calc(50% - $cyclistSize/30.5);
    left: calc(50% - $cyclistSize/2.19);
    width: calc($cyclistSize/3.55);
  }

  &.loading {
    &::after, &::before {
      transition-delay: 1500ms;
      opacity: 1;
      animation-play-state: running;
    }
  }
}

video {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

body.fullscreen video, #videoOuter:fullscreen video {
  object-fit: contain;
}

#switcher {
  $width: 41px;
  $height: 68px;

  position: absolute;
  position: sticky;
  top: calc(50vh - $height / 2);
  left: 0;
  height: 0;
  overflow: visible;
  touch-action: pan-x;

  div {
    background-image: url("/images/switcher2.svg");
    background-position: left center;
    background-repeat: no-repeat;
    background-size: 200% 100%;
    height: $height;
    margin-left: calc($width / -2);
    touch-action: pan-x;
    user-select: none;
    width: $width;
  }
}

.showSidebar #switcher div {
  background-position: right center;
}

$buttonSize: 1.8rem;
$buttonOffset: 0.25rem;
$buttonBorder: 2px;
#layerSwitcher {
  display: none;

  position: absolute;
  top: calc(50% - $buttonSize - $buttonOffset - $buttonBorder);
  left: $buttonOffset;
  z-index: 2;

  width: $buttonSize;
  height: $buttonSize;

  > button {
    background-image: url("/images/layers.svg");
    background-position: center;
    background-repeat: no-repeat;
    background-size: 70%;
    width: $buttonSize;
    height: $buttonSize;

    background-color: #fff;
    border-radius: 0.2rem;
    border: 0;
    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
  }

  > div {
    position: absolute;
    bottom: 0px;

    background: #fff;

    button {
      width: 100%;
      padding: 8px 8px 6px 4px;
      text-align: left;
      color: #000;

      &.layer + .style, &.style + .layer {
        border-top: 1px solid #999;
      }

      &::before {
        width: 20px;
        padding-right: 10px;
        text-align: right;
        content: "✓";
        color: transparent;
        line-height: 1.0rem;
        background-repeat: no-repeat;
        background-position: center center;
        background-size: 0.8rem;
      }
      &.active::before {
        background-image: url("/images/checkmark.svg");
        filter: brightness(0) saturate(100%);
      }

      &:hover {
        background: #f3f3f3;
      }
    }
  }
}


a.header {
  color: #fff;
  line-height: 2em;
  display: block;
  background: $darkBg;
  text-align: center;
  font-weight: bold;
  font-size: 1.6em;
  text-decoration: none !important;
}

$iconSize: 1.5em;
$iconBorder: 0.13em;
.icon {
  height: $iconSize;
  display: inline-block;
  line-height: calc($iconSize + $iconBorder);
  margin-top: -0.35em;
  margin-bottom: -0.15em;
  font-size: 90%;
  font-weight: normal;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  border: $iconBorder solid white;

  &.freizeit {
    border-radius: 0.2rem;
    padding: 0 0.2rem;
  }

  &.alltag {
    border-radius: 50%;
    width: 1.5em;
  }

  &.bezirk {
    border-radius: 0% 0% 50% 50%;
    min-width: 1.5em;
    line-height: 1.25em;
  }

  &.rsw {
    display: none;
  }
}

h3 .icon {
  outline: 1px solid #eee;
  float: right;
  margin-top: -0.2rem;
  pointer-events: none;
  cursor: normal;
}

.icon, .fricon {
  font-weight: bold;
  color: #fff !important;
  cursor: default;
  border: $iconBorder solid white;
  text-shadow: -0.05em 0.05em 0 rgba(0, 0, 0, 0.4),
    0.05em 0.05em 0 rgba(0, 0, 0, 0.4), 0.05em -0.05em 0 rgba(0, 0, 0, 0.4),
    -0.05em -0.05em 0 rgba(0, 0, 0, 0.4);
}


a.icon, a.customicon {
  cursor: pointer;

  &:hover {
    text-decoration: none;
    opacity: 0.8;
  }
}

abbr {
  cursor: help;
  text-decoration: underline dotted;
}


h3,
h4 {
  margin-top: 1em;
}

h3 {
  font-size: 1.1rem;
}

h4 {
  font-size: 1.0rem;
}

h5 {
  margin-top: 0.5em;
  font-size: 0.9rem;
  font-weight: normal;
  font-style: italic;
}

h3:first-child + .duration {
  color: #888;
  font-style: italic;
  display: block;
  margin-top: 0.4em;
}

.artfooter {
  font-style: italic;
  text-align: right;
  color: #888;

  a {
    color: #888;
    font-style: italic;
  }
}

span.updated {
  color: #888;
  font-style: italic;
  display: block;
  padding-top: 0.1rem;
}

ul,
ol {
  padding-left: 0.85rem;
  margin-top: 0.6rem;

  li {
    margin-bottom: 0.4rem;
  }

  .duration {
    color: #888;
    float: right;
    padding-left: .5em;
  }
}

ol.route-list {
  list-style-type: none;
  padding: 0;
  columns: 2;
  column-gap: 0.5rem;

  li {
    margin: 0;
    margin-bottom: 0.5rem;
    clear: all;
    break-inside: avoid-column;
  }

  a:hover {
    span {
      text-decoration: inherit;
      &.icon {
        text-decoration: none;
      }
    }
  }

  span {
    display: inline-block;
    vertical-align: middle;
    line-height: 1.45rem;
  }

  span.freizeit {
    width: 2.5em;
  }

  span.freizeit + span {
    width: calc(100% - 3.3em);
  }

  span.alltag + span {
    width: calc(100% - $iconSize - 2*$iconBorder - 0.2em);
  }

  span + span {
    margin-left: 0.3em;
  }

  .icon {
    cursor: pointer;
    text-decoration: none !important;
    margin-top: -0.16em;
    line-height: 1.25rem;
  }
}


li.separator {
  margin-top: 1rem;
  font-weight: bold;
  list-style-type: '';
  margin-left: -0.85rem;

  &:first-child {
    display: none;
  }
}


ol.hide-bullets {
  list-style-type: none;
  padding: 0;

  time {
    width: 4em;
    display: inline-block;
    vertical-align: top;
  }

  a {
    width: calc(100% - 4.5em);
    display: inline-block;
  }

  li.separator {
    margin-left: 0;
  }

  li {
    clear: both;
  }

  &:after {
    content: ".";
    visibility: hidden;
    display: block;
    height: 0;
    clear: both;
  }
}

table.route-list {
  margin-right: calc(-0.5em - 0.3rem);
  line-height: 1.8rem;

  th {
    padding-right: 0.3rem;
    min-width: 5.1rem;
    vertical-align: top;
  }

  td {
    vertical-align: middle;
    cursor: default;

    > span {
      white-space: nowrap;
    }
  }

  img {
    vertical-align: text-top;
    width: 1.5em;
    height: 1.5em;
  }

  a {
    margin: 0.3rem;
  }
}

p, form {
  text-align: justify;
  margin-top: 0.6rem;
}

h5 + p {
  margin-top: 0.25rem;
}

a {
  color: #0366d6;
  text-decoration: none;
  cursor: pointer;

  &:hover {
    text-decoration: underline;

    .icon {
      font-weight: bold;
      cursor: pointer;
    }
  }

  &.ref {
    font-style: italic;
    text-decoration-style: dotted;
    cursor: help;
  }
}

#impressum {
  margin-top: 2em;
  float: right;

  a {
    color: #888;
  }
}

#indicator,
#indicator-rotate {
  height: 2em;
  width: 2em;
  pointer-events: none;
  // workaround for iOS Safari flickering the indicator while animating
  // depending on rotation
  transform: translateZ(0.00001px);

  &.animate {
    // NOTE: also update timeout in map.js
    transition: linear 0.15s;
  }
}

#ping-indicator {
  background: #f47474;
  border-radius: 100%;
  width: 1em;
  height: 1em;
  border: 0.2em solid #fff;
  outline: 0.1em solid #000000a1;
  pointer-events: none;
  transition-property: opacity;
  opacity: 1;
  // keep in sync with map.js
  transition-delay: 10s;
  transition-duration: 3s;
  transition-timing-function: linear;
  margin-left: 0.5em;
  margin-top: 0.5em;
}

#indicator-loc {
  background: rgba(255, 255, 255, 0.5);
  border-radius: 0.8em;
  border: 0.2em solid #000;
  box-shadow: 0 0 0.1em 0.1em #fff;
  height: 0.8em;
  left: 50%;
  position: absolute;
  color: #000;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 0.8em;
}

#indicator-dir {
  &::before {
    content: '▴';
    font-size: 1.3em; // adjust translateY below as needed
  }

  height: 2em;
  left: 50%;
  position: relative;
  top: 0%;
  text-align: center;
  text-shadow: 0.1em 0.0em 0.1em #fff,
  0.1em -0.1em 0.1em #fff,
  -0.1em 0.0em 0.1em #fff,
  -0.1em -0.1em 0.1em #fff;
  transform: translate(-50%, -45%);
  width: 2em;
  z-index: 10;
}

img.roaddiagram {
  width: 100%;
  max-width: 25rem;
  max-height: 50%;
  object-fit: contain;
  height: auto;
  margin: 0.8rem auto;
  display: block;

  &.right {
    width: auto;
    max-width: 40%;
    float: right;
    padding: 0 0 1rem 1rem;
  }
}

p.alert {
  background: #ECD0D0;
  padding: $contentPad;
  margin: 0 calc(-1*$contentPad);
}

table.routing {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  width: calc(100% + 2*$contentPad);
  margin-left: -$contentPad;


  a {
    color: #000;
  }

  tr,
  td,
  th {
    padding: 0;
  }

  // this will control the size of the abstract route rendering, since it needs
  // to match in cell height for the different sub-icons to line up.
  $table-cell-height: 23px;

  td {
    height: $table-cell-height;
    white-space: nowrap;
    vertical-align: top;
  }

  $main-route-icon-size: 1.5em;

  // i.e. center column that displays the route
  tr:first-child td:nth-child(2) {
    // image will be set through HTML
    background-position: center bottom;
    background-repeat: no-repeat;
    background-size: auto calc(100% - $main-route-icon-size);
    width: calc(1.25*2*$table-cell-height);
    vertical-align: top;
    text-align: center;
    padding-top: 0.42em;

    .icon {
      font-size: 120%;
      line-height: 1.6rem;
      width: $main-route-icon-size;
      height: $main-route-icon-size;
    }
  }

  td:first-child {
    text-align: right;
  }

  td.dir {
    opacity: 0.3;
  }

  .icon, .customicon {
    margin: 0 0.2em;
  }

  .customicon {
    border: 0.13em solid transparent;
    vertical-align: middle;
    line-height: 1.9rem;
    display: inline-block;
    height: 1.5em;
  }
}

table {
  border-spacing: 0.5em 0.2em;
  margin: 0 -0.5em;
}

th {
  text-align: left;
  vertical-align: middle;
}

td {
  text-align: left;
  vertical-align: text-top;
}

input[type=search] {
  margin-top: 0.6rem;
  box-sizing: border-box;
  width: 100%;
  padding: 0.5rem;
  border-radius: 0.2rem;
  border: 1px solid #cdc7c2;
  outline: 0;
  font-size: 16px;

  &:focus {
    border: 1px solid #3584e4;
    box-shadow: 0 0 0 1px #3584e4;
  }
}

@media (min-width: calc(3*$minWidth)) {
  input[type=search] {
    font-size: inherit;
  }
}

.aside {
  color: #888;
  font-style: italic;
  display: block;
}

ul, ol {
  li.aside {
    float: right;
    margin-top: -2.25rem;

    &:first-child + li.separator {
      display: none;
    }
  }
}

.imgbullet img {
  width: 1rem;
  height: 1rem;
  vertical-align: sub;
}
